0 info it worked if it ends with ok
1 verbose cli [ 'C:\\AppCan\\AppCanStudioPersonalV3.1\\HDK\\emulator\\mas\\\\node.exe',
1 verbose cli   'C:\\AppCan\\AppCanStudioPersonalV3.1\\HDK\\emulator\\mas\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'i',
1 verbose cli   'eventemitter2',
1 verbose cli   '--save' ]
2 info using npm@1.4.3
3 info using node@v0.10.15
4 verbose node symlink C:\AppCan\AppCanStudioPersonalV3.1\HDK\emulator\mas\\node.exe
5 verbose readDependencies using package.json deps
6 verbose cache add [ 'eventemitter2', null ]
7 verbose cache add name=undefined spec="eventemitter2" args=["eventemitter2",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: 'eventemitter2',
8 verbose parsed url   path: 'eventemitter2',
8 verbose parsed url   href: 'eventemitter2' }
9 silly lockFile 4d0fe242-eventemitter2 eventemitter2
10 verbose lock eventemitter2 Y:\4d0fe242-eventemitter2.lock
11 silly lockFile 4d0fe242-eventemitter2 eventemitter2
12 silly lockFile 4d0fe242-eventemitter2 eventemitter2
13 verbose addNamed [ 'eventemitter2', '' ]
14 verbose addNamed [ null, '*' ]
15 silly lockFile 6b45ec02-eventemitter2 eventemitter2@
16 verbose lock eventemitter2@ Y:\6b45ec02-eventemitter2.lock
17 silly addNameRange { name: 'eventemitter2', range: '*', hasData: false }
18 verbose url raw eventemitter2
19 verbose url resolving [ 'http://registry.npmjs.org/', './eventemitter2' ]
20 verbose url resolved http://registry.npmjs.org/eventemitter2
21 info trying registry request attempt 1 at 18:39:39
22 verbose etag "5A7TVE65P6OQIUHUEOYPQFWML"
23 http GET http://registry.npmjs.org/eventemitter2
24 http 304 http://registry.npmjs.org/eventemitter2
25 silly registry.get cb [ 304,
25 silly registry.get   { date: 'Tue, 18 Aug 2015 10:39:39 GMT',
25 silly registry.get     'cache-control': 'max-age=60',
25 silly registry.get     etag: '"5A7TVE65P6OQIUHUEOYPQFWML"',
25 silly registry.get     age: '11',
25 silly registry.get     'x-served-by': 'cache-itm7425-ITM',
25 silly registry.get     'x-cache': 'HIT, MISS from 10.133.2.230',
25 silly registry.get     'x-cache-hits': '2',
25 silly registry.get     'x-timer': 'S1439894379.337661,VS0,VE0',
25 silly registry.get     vary: 'Accept',
25 silly registry.get     'x-cache-lookup': 'MISS from 10.133.2.230:3128',
25 silly registry.get     via: '1.1 varnish, 1.0 10.133.2.230 (squid/3.1.10)',
25 silly registry.get     connection: 'keep-alive' } ]
26 verbose etag eventemitter2 from cache
27 silly addNameRange number 2 { name: 'eventemitter2', range: '*', hasData: true }
28 silly addNameRange versions [ 'eventemitter2',
28 silly addNameRange   [ '0.0.1',
28 silly addNameRange     '0.1.0',
28 silly addNameRange     '0.1.1',
28 silly addNameRange     '0.1.3',
28 silly addNameRange     '0.2.5',
28 silly addNameRange     '0.2.6',
28 silly addNameRange     '0.2.7',
28 silly addNameRange     '0.3.5',
28 silly addNameRange     '0.3.6',
28 silly addNameRange     '0.3.7',
28 silly addNameRange     '0.4.0',
28 silly addNameRange     '0.4.1',
28 silly addNameRange     '0.4.3',
28 silly addNameRange     '0.4.6',
28 silly addNameRange     '0.4.7',
28 silly addNameRange     '0.4.8',
28 silly addNameRange     '0.4.9',
28 silly addNameRange     '0.4.10',
28 silly addNameRange     '0.4.11',
28 silly addNameRange     '0.4.12',
28 silly addNameRange     '0.4.13',
28 silly addNameRange     '0.4.14' ] ]
29 verbose addNamed [ 'eventemitter2', '0.4.14' ]
30 verbose addNamed [ '0.4.14', '0.4.14' ]
31 silly lockFile eeff59a2-eventemitter2-0-4-14 eventemitter2@0.4.14
32 verbose lock eventemitter2@0.4.14 Y:\eeff59a2-eventemitter2-0-4-14.lock
33 silly lockFile eeff59a2-eventemitter2-0-4-14 eventemitter2@0.4.14
34 silly lockFile eeff59a2-eventemitter2-0-4-14 eventemitter2@0.4.14
35 silly lockFile 6b45ec02-eventemitter2 eventemitter2@
36 silly lockFile 6b45ec02-eventemitter2 eventemitter2@
37 silly resolved [ { name: 'eventemitter2',
37 silly resolved     version: '0.4.14',
37 silly resolved     description: 'A Node.js event emitter implementation with namespaces, wildcards, TTL and browser support.',
37 silly resolved     keywords: [ 'event', 'events', 'emitter', 'eventemitter' ],
37 silly resolved     author: { name: 'hij1nx', email: 'paolo@async.ly' },
37 silly resolved     contributors: [ [Object], [Object], [Object], [Object], [Object] ],
37 silly resolved     license: 'MIT',
37 silly resolved     repository:
37 silly resolved      { type: 'git',
37 silly resolved        url: 'git://github.com/hij1nx/EventEmitter2.git' },
37 silly resolved     devDependencies: { nodeunit: '*', benchmark: '>= 0.2.2' },
37 silly resolved     main: './lib/eventemitter2.js',
37 silly resolved     scripts:
37 silly resolved      { test: 'nodeunit test/simple/ && nodeunit test/wildcardEvents/',
37 silly resolved        benchmark: 'node test/perf/benchmark.js' },
37 silly resolved     files: [ 'lib/eventemitter2.js', 'index.js' ],
37 silly resolved     readme: '[![build-status](https://www.codeship.io/projects/3ad58940-4c7d-0131-15d5-5a8cd3f550f8/status)](https://www.codeship.io/projects/11259)\n\n# SYNOPSIS\n\nEventEmitter2 is an implementation of the EventEmitter found in Node.js\n\n# DESCRIPTION\n\n### FEATURES\n - Namespaces/Wildcards.\n - Times To Listen (TTL), extends the `once` concept with `many`.\n - Browser environment compatibility.\n - Demonstrates good performance in benchmarks\n\n```\nEventEmitterHeatUp x 3,728,965 ops/sec \\302\\2610.68% (60 runs sampled)\nEventEmitter x 2,822,904 ops/sec \\302\\2610.74% (63 runs sampled)\nEventEmitter2 x 7,251,227 ops/sec \\302\\2610.55% (58 runs sampled)\nEventEmitter2 (wild) x 3,220,268 ops/sec \\302\\2610.44% (65 runs sampled)\nFastest is EventEmitter2\n```\n\n### Differences (Non breaking, compatible with existing EventEmitter)\n\n - The constructor takes a configuration object.\n \n```javascript\n    var EventEmitter2 = require(\'eventemitter2\').EventEmitter2;\n    var server = new EventEmitter2({\n\n      //\n      // use wildcards.\n      //\n      wildcard: true,\n\n      //\n      // the delimiter used to segment namespaces, defaults to `.`.\n      //\n      delimiter: \'::\', \n      \n      //\n      // if you want to emit the newListener event set to true.\n      //\n      newListener: false, \n\n      //\n      // max listeners that can be assigned to an event, default 10.\n      //\n      maxListeners: 20\n    });\n```\n\n - Getting the actual event that fired.\n\n```javascript\n    server.on(\'foo.*\', function(value1, value2) {\n      console.log(this.event, value1, value2);\n    });\n```\n\n - Fire an event N times and then remove it, an extension of the `once` concept.\n\n```javascript\n    server.many(\'foo\', 4, function() {\n      console.log(\'hello\');\n    });\n```\n\n - Pass in a namespaced event as an array rather than a delimited string.\n\n```javascript\n    server.many([\'foo\', \'bar\', \'bazz\'], function() {\n      console.log(\'hello\');\n    });\n```\n\n\n# API\n\nWhen an `EventEmitter` instance experiences an error, the typical action is\nto emit an `error` event. Error events are treated as a special case.\nIf there is no listener for it, then the default action is to print a stack\ntrace and exit the program.\n\nAll EventEmitters emit the event `newListener` when new listeners are\nadded.\n\n\n**Namespaces** with **Wildcards**\nTo use namespaces/wildcards, pass the `wildcard` option into the EventEmitter \nconstructor. When namespaces/wildcards are enabled, events can either be \nstrings (`foo.bar`) separated by a delimiter or arrays (`[\'foo\', \'bar\']`). The \ndelimiter is also configurable as a constructor option.\n\nAn event name passed to any event emitter method can contain a wild card (the \n`*` character). If the event name is a string, a wildcard may appear as `foo.*`. \nIf the event name is an array, the wildcard may appear as `[\'foo\', \'*\']`.\n\nIf either of the above described events were passed to the `on` method, \nsubsequent emits such as the following would be observed...\n\n```javascript\n   emitter.emit(\'foo.bazz\');\n   emitter.emit([\'foo\', \'bar\']);\n```\n\n\n### emitter.addListener(event, listener)\n### emitter.on(event, listener)\n\nAdds a listener to the end of the listeners array for the specified event.\n\n```javascript\n    server.on(\'data\', function(value1, value2, value3, ...) {\n      console.log(\'The event was raised!\');\n    });\n```\n\n```javascript\n    server.on(\'data\', function(value) {\n      console.log(\'The event was raised!\');\n    });\n```\n\n### emitter.onAny(listener)\n\nAdds a listener that will be fired when any event is emitted.\n\n```javascript\n    server.onAny(function(value) {\n      console.log(\'All events trigger this.\');\n    });\n```\n\n### emitter.offAny(listener)\n\nRemoves the listener that will be fired when any event is emitted.\n\n```javascript\n    server.offAny(function(value) {\n      console.log(\'The event was raised!\');\n    });\n```\n\n#### emitter.once(event, listener)\n\nAdds a **one time** listener for the event. The listener is invoked \nonly the first time the event is fired, after which it is removed.\n\n```javascript\n    server.once(\'get\', function (value) {\n      console.log(\'Ah, we have our first value!\');\n    });\n```\n\n### emitter.many(event, timesToListen, listener)\n\nAdds a listener that will execute **n times** for the event before being\nremoved. The listener is invoked only the first **n times** the event is \nfired, after which it is removed.\n\n```javascript\n    server.many(\'get\', 4, function (value) {\n      console.log(\'This event will be listened to exactly four times.\');\n    });\n```\n\n\n### emitter.removeListener(event, listener)\n### emitter.off(event, listener)\n\nRemove a listener from the listener array for the specified event. \n**Caution**: changes array indices in the listener array behind the listener.\n\n```javascript\n    var callback = function(value) {\n      console.log(\'someone connected!\');\n    };\n    server.on(\'get\', callback);\n    // ...\n    server.removeListener(\'get\', callback);\n```\n\n\n### emitter.removeAllListeners([event])\n\nRemoves all listeners, or those of the specified event.\n\n\n### emitter.setMaxListeners(n)\n\nBy default EventEmitters will print a warning if more than 10 listeners \nare added to it. This is a useful default which helps finding memory leaks. \nObviously not all Emitters should be limited to 10. This function allows \nthat to be increased. Set to zero for unlimited.\n\n\n### emitter.listeners(event)\n\nReturns an array of listeners for the specified event. This array can be \nmanipulated, e.g. to remove listeners.\n\n```javascript\n    server.on(\'get\', function(value) {\n      console.log(\'someone connected!\');\n    });\n    console.log(server.listeners(\'get\')); // [ [Function] ]\n```\n\n### emitter.listenersAny()\n\nReturns an array of listeners that are listening for any event that is \nspecified. This array can be manipulated, e.g. to remove listeners.\n\n```javascript\n    server.onAny(function(value) {\n      console.log(\'someone connected!\');\n    });\n    console.log(server.listenersAny()[0]); // [ [Function] ]\n```\n\n### emitter.emit(event, [arg1], [arg2], [...])\n\nExecute each of the listeners that may be listening for the specified event \nname in order with the list of arguments.\n\n# LICENSE\n\n(The MIT License)\n\nCopyright (c) 2011 hij1nx <http://www.twitter.com/hij1nx>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy \nof this software and associated documentation files (the \'Software\'), to deal \nin the Software without restriction, including without limitation the rights \nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell \ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR \nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\nAN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION \nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
37 silly resolved     readmeFilename: 'README.md',
37 silly resolved     bugs: { url: 'https://github.com/hij1nx/EventEmitter2/issues' },
37 silly resolved     homepage: 'https://github.com/hij1nx/EventEmitter2',
37 silly resolved     _id: 'eventemitter2@0.4.14',
37 silly resolved     _from: 'eventemitter2@' } ]
38 info install eventemitter2@0.4.14 into F:\github\iconfonts
39 info installOne eventemitter2@0.4.14
40 info F:\github\iconfonts\node_modules\eventemitter2 unbuild
41 info preuninstall eventemitter2@0.4.14
42 info uninstall eventemitter2@0.4.14
43 verbose true,F:\github\iconfonts\node_modules,F:\github\iconfonts\node_modules unbuild eventemitter2@0.4.14
44 info postuninstall eventemitter2@0.4.14
45 verbose tar unpack Y:\eventemitter2\0.4.14\package.tgz
46 silly lockFile c9f01766-fonts-node-modules-eventemitter2 tar://F:\github\iconfonts\node_modules\eventemitter2
47 verbose lock tar://F:\github\iconfonts\node_modules\eventemitter2 Y:\c9f01766-fonts-node-modules-eventemitter2.lock
48 silly lockFile 0a949b74-eventemitter2-0-4-14-package-tgz tar://Y:\eventemitter2\0.4.14\package.tgz
49 verbose lock tar://Y:\eventemitter2\0.4.14\package.tgz Y:\0a949b74-eventemitter2-0-4-14-package-tgz.lock
50 silly gunzTarPerm modes [ '755', '644' ]
51 silly gunzTarPerm extractEntry package.json
52 silly gunzTarPerm modified mode [ 'package.json', 438, 420 ]
53 silly gunzTarPerm extractEntry README.md
54 silly gunzTarPerm modified mode [ 'README.md', 438, 420 ]
55 silly gunzTarPerm extractEntry index.js
56 silly gunzTarPerm modified mode [ 'index.js', 438, 420 ]
57 silly gunzTarPerm extractEntry lib/eventemitter2.js
58 silly gunzTarPerm modified mode [ 'lib/eventemitter2.js', 438, 420 ]
59 silly lockFile c9f01766-fonts-node-modules-eventemitter2 tar://F:\github\iconfonts\node_modules\eventemitter2
60 silly lockFile c9f01766-fonts-node-modules-eventemitter2 tar://F:\github\iconfonts\node_modules\eventemitter2
61 silly lockFile 0a949b74-eventemitter2-0-4-14-package-tgz tar://Y:\eventemitter2\0.4.14\package.tgz
62 silly lockFile 0a949b74-eventemitter2-0-4-14-package-tgz tar://Y:\eventemitter2\0.4.14\package.tgz
63 info preinstall eventemitter2@0.4.14
64 verbose readDependencies using package.json deps
65 verbose readDependencies using package.json deps
66 silly resolved []
67 verbose about to build F:\github\iconfonts\node_modules\eventemitter2
68 info build F:\github\iconfonts\node_modules\eventemitter2
69 verbose linkStuff [ false, false, false, 'F:\\github\\iconfonts\\node_modules' ]
70 info linkStuff eventemitter2@0.4.14
71 verbose linkBins eventemitter2@0.4.14
72 verbose linkMans eventemitter2@0.4.14
73 verbose rebuildBundles eventemitter2@0.4.14
74 info install eventemitter2@0.4.14
75 info postinstall eventemitter2@0.4.14
76 error peerinvalid The package mongoose does not satisfy its siblings' peerDependencies requirements!
76 error peerinvalid Peer mongoose-auto-increment@4.0.0 wants mongoose@~4.0.0
77 error System Windows_NT 6.1.7601
78 error command "C:\\AppCan\\AppCanStudioPersonalV3.1\\HDK\\emulator\\mas\\\\node.exe" "C:\\AppCan\\AppCanStudioPersonalV3.1\\HDK\\emulator\\mas\\node_modules\\npm\\bin\\npm-cli.js" "i" "eventemitter2" "--save"
79 error cwd F:\github\iconfonts
80 error node -v v0.10.15
81 error npm -v 1.4.3
82 error code EPEERINVALID
83 verbose exit [ 1, true ]
